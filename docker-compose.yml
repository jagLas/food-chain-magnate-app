version: '3.8'

services:
  db:
    image: postgres:15.4
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_DB=${DB_DATABASE}
    ports:
      - 5432:5432
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d ${DB_DATABASE}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      foodapi:

  api:
    build:
      context: ./backend
    image: food_chain_api
    ports:
      - 5000:5000
    environment:
      - FLASK_ENV=development
      - DATABASE_URL=postgresql://${DB_USERNAME}:${DB_PASSWORD}@db/${DB_DATABASE}
      - SECRET_KEY=${SECRET_KEY}
    volumes:
      - ./backend:/app:delegated
    depends_on:
      db:
        condition: service_healthy
    command: sh -c ./entrypoint.sh
    networks:
      default:
      foodapi:
    restart: on-failure

  frontend:
    build:
      context: ./frontend
    image: food_chain_frontend
    environment:
      - REACT_APP_DB_URL=${DB_URL}
    ports:
      - 3000:3000
    depends_on:
      - api
      - db
    networks:
      default:
    volumes:
      - ./frontend:/app:delegated
      - /app/node_modules
    stdin_open: true

volumes:
  db-data:

networks:
  foodapi:
    driver: bridge